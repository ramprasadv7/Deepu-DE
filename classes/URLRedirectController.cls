public class URLRedirectController{

public string bodyprint{get;set;}

//Settings needed on the google cloud console.One can store this securely in custom settings or an object.

public static final string CLIENT_SECRET='Pk2qLrxt5kAbNyZ--N07DJzi';//Fill as per your registered app settings in google console
public static final string CLIENT_ID='159393863666-cirmd88rrmn8qo7d64tdf6hj0kvgpmr2.apps.googleusercontent.com';//Fill as per your registered app settings in google console
public static final string REDIRECT_URL='https://c.na3.visual.force.com/apex/URLRedirect';

public static final string OAUTH_TOKEN_URL='https://accounts.google.com/o/oauth2/token';
public static final string OAUTH_CODE_END_POINT_URL='https://accounts.google.com/o/oauth2/auth';

public static final string GRANT_TYPE='grant_type=authorization_code';

//Scope URL as per oauth 2.0 guide of the google 
public static final string SCOPE='https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile';
public static final string STATE='/profile';

//Approval Prompt Constant
public static final string APPROVAL_PROMPT='force';


public void checkForCode()
{
    if(apexpages.currentpage().getparameters().containsKey('code'))
        showtoken();
}

   public pagereference connect(){
   
     String x=OAUTH_CODE_END_POINT_URL+'?scope='+EncodingUtil.urlEncode(SCOPE,'UTF-8')+'&state='+EncodingUtil.urlEncode(STATE,'UTF-8')+'&redirect_uri='+EncodingUtil.urlEncode(REDIRECT_URL,'UTF-8')+'&response_type=code&client_id='+CLIENT_ID+'&approval_prompt='+APPROVAL_PROMPT+'&access_type=offline';
     system.debug(x);
     pagereference p=new pagereference(x);
     return p;
     
   }
   
    public pagereference showtoken(){
   
    string codeparam=apexpages.currentpage().getparameters().get('code');
    Http h = new Http();
    String body='code='+codeparam+'&client_id='+CLIENT_ID+'&client_secret='+CLIENT_SECRET+'&redirect_uri='+REDIRECT_URL+'&scope=&'+GRANT_TYPE;
    
    HttpRequest req = new HttpRequest();
    req.setEndpoint(OAUTH_TOKEN_URL);
    req.setHeader('Content-Type','application/x-www-form-urlencoded');
    req.setMethod('POST');
    req.setBody(body);
    system.debug('REQUEST BODY'+body);

    HttpResponse res;
    if(!Test.isRunningTest())
        res = h.send(req);
    else
        res = MockHttpResponseGenerator.respond(req);
    system.debug('Response: '+res);
    system.debug('body'+res.getbody());
    AccessTokenClass  newToken = (AccessTokenClass) System.JSON.deserialize(res.getBody(), AccessTokenClass.class);
    bodyprint = 'Access Token :'+newToken.access_token+'\n'+'Refresh Token:'+newToken.refresh_token;
    return null;
   
   }  
}